<?xml version="1.0" encoding="UTF-8"?>
<beans  
     xmlns="http://www.springframework.org/schema/beans"  
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
     xmlns:tx="http://www.springframework.org/schema/tx"  
     xmlns:context="http://www.springframework.org/schema/context"    
     xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
     http://www.springframework.org/schema/tx   
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.2.xsd">
     
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 
		enable @Transactional注解，属性有：
		transaction-manager： 指定执行事务的transactionManager的bean，只有一个transactionManager时可以不指定
		mode： 可用的值有proxy(默认)和aspectj，前者用JDK的代理，后者用AspectJ
		proxy-target-class： 如果为true，Spring将创建子类来代理业务类（需要在类路径中添加CGLib.jar类库）；如果为false，则使用基于接口的代理。
		order: 如果业务类除事务切面外，还需要织入其他的切面，通过该属性可以控制事务切面在目标连接点的织入顺序
	 -->
	<tx:annotation-driven />
	
</beans>
